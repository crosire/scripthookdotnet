name: Build

on:
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.1
      with:
        msbuild-architecture: x64
        vs-version: 17.7.6
    - name: Add VSTest.Console to PATH
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: |
        $vstest_parent_path = (.github/workflows/find-vstest-path.ps1)
        if ($vstest_parent_path -eq "")
        {
          throw "Failed to find the parent path of VSTest.Console."
        }
        Add-Content $env:GITHUB_PATH $vstest_parent_path

    - name: Install ScriptHookV SDK
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: ./tools/install_sdk.ps1
    - name: Define SHVDN version
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        # callers can't (directly) pass property values of the env var, so check if the current ref is a version tag in here
        $VerInput = ""
        $currentRefIsVersionTag = $env:GITHUB_REF -match '^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)'
        if ($currentRefIsVersionTag) {
          $VerInput = $matches[1]
        }

        if ($VerInput -eq "")
        {
          git fetch --unshallow 2>&1 | Out-Null
          $env:SHVDN_VERSION = echo "SHVDN_VERSION=$(git for-each-ref --sort=-creatordate --count 1 --format="%(refname:short)" refs/tags |% { $_.Substring(1) })"
        }
        else
        {
          $env:SHVDN_VERSION = "SHVDN_VERSION=$($VerInput)"
        }
        echo "Version: v$($VerInput)"
        echo $env:SHVDN_VERSION >> $env:GITHUB_ENV
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
    - name: Build solution and put misc files for packing
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        msbuild /m /p:configuration=Release /p:platform=x64 ScriptHookVDotNet.sln `
        && del bin\Release\ScriptHookVDotNet*.metagen
    - name: Run tests
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        # Set verbosity to `minimal` so only failed tests would print (set to `normal` by default in VSTest.Console)
        vstest.console "source\scripting_v3_tests\bin\x64\Release\net48\ScriptHookVDotNet_APIv3_Tests.dll" /logger:console;verbosity=minimal
    - name: Put misc files for packing
      working-directory: ${{env.GITHUB_WORKSPACE}}
        $robocopy_process = Start-Process "robocopy" -ArgumentList ". bin\Release README.md LICENSE.txt COPYRIGHT.md THIRD-PARTY-NOTICES.md" -PassThru -Wait
        if ($robocopy_process.ExitCode -ne 1) { exit 1 }
        cd bin\Release `
        && Get-ChildItem -File -Filter *.md | Rename-Item -NewName { $_.Name -replace '.md','.txt' } `
        && cd ..\..\ `
        && echo ReloadKeyBinding=None > bin\Release\ScriptHookVDotNet.ini `
        && echo ConsoleKeyBinding=F4 >> bin\Release\ScriptHookVDotNet.ini `
        && echo ScriptTimeoutThreshold=5000 >> bin\Release\ScriptHookVDotNet.ini `
        && echo WarnOfDeprecatedScriptsWithTicker=true >> bin\Release\ScriptHookVDotNet.ini
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ScriptHookVDotNet
        path: bin/Release/*
